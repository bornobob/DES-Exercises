/*
 * generated by Xtext 2.23.0
 */
package lego.rover.validation;

import org.eclipse.xtext.validation.Check;

import lego.rover.mission.*;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class MissionValidator extends AbstractMissionValidator {
	
	public static final String INVALID_NAME = "invalidName";

	@Check
	public void checkDuplicateMissionNames(Missions missions) {
		System.out.println("HERE");
		Mission[] mArray = (Mission[])missions.getMissions().toArray();
		int numberMissions = missions.getMissions().size();
		for (int i = 0; i < numberMissions; i++) {
			for (int j = i+1; j < numberMissions; j++) {
				if (mArray[i] != mArray[j] && mArray[i].getName().equals(mArray[j].getName())) {
					error("Duplicate mission name: \"" + mArray[i].getName() + "\"!", null);
				}
			}
		}
	}
	
	@Check
	public void checkDuplicateMissions(Missions missions) {
		System.out.println("HERE (MISSIons)");
		Mission[] mArray = (Mission[])missions.getMissions().toArray();
		int numberMissions = missions.getMissions().size();
		for (int i = 0; i < numberMissions; i++) {
			for (int j = i+1; j < numberMissions; j++) {
				if (!mArray[i].getName().equals(mArray[j].getName()) && Auxiliary.EqualUpToRenaming(mArray[i], mArray[j])) {
					warning("Missions \"" + mArray[i].getName() + "\" and \"" + mArray[j].getName() + "\" are equal up to renaming!", null);
				}
			}
		}
	}
	
	@Check
	public void checkDuplicateRobotNames(Robots robots) {
		Robot[] rArray = (Robot[])robots.getRobots().toArray();
		int numberRobots = robots.getRobots().size();
		for (int i = 0; i < numberRobots; i++) {
			for (int j = i+1; j < numberRobots; j++) {
				if (rArray[i] != rArray[j] && rArray[i].getName().equals(rArray[j].getName())) {
					error("Duplicate robot name: \"" + rArray[i].getName() + "\"!", null);
				}
			}
		}
	}
	
	@Check
	public void checkDuplicateArgNames(Args args) {
		Arg[] aArray = (Arg[])args.getArguments().toArray();
		int numberArgs = args.getArguments().size();
		for (int i = 0; i < numberArgs; i++) {
			for (int j = i+1; j < numberArgs; j++) {
				if (aArray[i] != aArray[j] && aArray[i].getVar().equals(aArray[j].getVar())) {
					error("Duplicate robot name: \"" + aArray[i].getVar() + "\"!", null);
				}
			}
		}
	}
	
}
